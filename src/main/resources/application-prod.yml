server:
  port: 5000
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

springdoc:
  api-docs:
    enabled: true # swagger on/off
  swagger-ui:
    enabled: true
    tagsSorter: alpha
    operations-sorter: alpha
    display-request-duration: true

spring:
  datasource:
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?allowPublicKeyRetrieval=true&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${rds.username}
    password: ${rds.password}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5Dialect

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile

          # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
          # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #요청URL
            token-uri: https://nid.naver.com/oauth2.0/token #토큰 요청URL
            user-info-uri: https://openapi.naver.com/v1/nid/me #프로필정보 요청 URL
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize #요청URL
            token-uri: https://kauth.kakao.com/oauth/token #토큰 요청URL
            user-info-uri: https://kapi.kakao.com/v2/user/me #프로필정보 요청 URL
            user-name-attribute: kakao_account

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.orm.jdbc.bind: trace

file:
  dir: /Users/jaymon/desktop/fileupload/





